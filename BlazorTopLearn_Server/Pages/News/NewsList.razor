@page "/news"
@using Blazor.Business.Repository.IRepository
@using Blazor.Model.NewsDtos
@inject INewsRepository NewsRepository
@inject IJSRuntime JsRuntime

<div class="container">
    <div class="row">
        <div class="col-md-12">
            <NavLink href="create-news" class="btn btn-info form-control">
                ثبت خبر جدید
            </NavLink>
            <div class="post-content">
                <table class="table table-bordered table-hover">
                    <thead>
                        <tr>
                            <td>عنوان</td>
                            <td>توضیحات کوتاه</td>
                            <td>دستورات</td>
                        </tr>
                    </thead>
                    <tbody>
                        @if (News.Any())
                        {
                            @foreach(var news in News)
                            {
                                <tr>
                                    <td>
                                        @news.Title
                                    </td>
                                    <td>
                                        @news.CreatedDate
                                    </td>
                                    <td>
                                        @news.ShortDescription
                                    </td>
                                    <td>
                                        <a class="btn btn-warning btn-block" @onclick="TestConfirmBox">ویرایش</a>
                                        <a class="btn btn-success btn-block" @onclick="TestSuccess">موفقیت</a>
                                        <a class="btn btn-danger btn-block" @onclick="TestError">خطا</a>

                                        <a class="btn btn-success btn-block" @onclick="SwalSuccess">موفقیت</a>
                                        <a class="btn btn-danger btn-block" @onclick="SwalError">خطا</a>
                                    </td>
                                </tr>
                            }
                        }
                        else
                        {
                            <tr>
                                <td colspan="3">هیچ خبری یافت نشد</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
        <div class="col-md-12">
            <p>
                IsConfirmed : @IsConfirmed
            </p>
        </div>
    </div>
</div>


@code {
    private IEnumerable<NewsDTO> News { get; set; } = new List<NewsDTO>();

    protected override async Task OnInitializedAsync()
    {
        News = await NewsRepository.GetAllNews();
    }

    private string ConfirmMessage = "Test Confirmation Message";
    private bool IsConfirmed {get; set; }
    private async Task TestConfirmBox()
    {
        IsConfirmed = await JsRuntime.InvokeAsync<bool>("confirm", ConfirmMessage);
    }
    private async Task TestSuccess()
    {
        await JsRuntime.ToastrSuccess("این یک پیغام موفقیت می باشد");
    }
    private async Task TestError()
    {
        await JsRuntime.ToastrError("این یک پیغام خطا می باشد");
    }
    private async Task SwalSuccess()
    {
        await JsRuntime.SwalSuccess("عملیات موردنظر با موفقیت انجام شد");
    }
    private async Task SwalError()
    {
        await JsRuntime.SwalError("عملیات موردنظر با شکست مواجه شد");
    }
}
