@page "/news/add-news"
@using Blazor.Model.NewsDtos
@using Blazor.Business.Repository.IRepository
@using Blazor.Data.Entities.NewsEntities

@inject INewsRepository NewsRepository
@inject NavigationManager NavigationManager

<div class="container">
    <div class="row">
        <div class="col-md-12">
            <div class="post-content">
                <EditForm Model="@NewsModel" OnValidSubmit="HandleCreateNews">
                    <DataAnnotationsValidator />
                    <div class="col md-12">
                        <div class="form-group">
                            <label>عنوان</label>
                            <InputText class="form-control" @bind-Value="@NewsModel.Title" placeholder="عنوان خبر" />
                        </div>
                        <ValidationMessage style="color:darkred" For="() => NewsModel.Title"/>
                    </div>
                    <div class="col md-12">
                        <div class="form-group">
                            <label>توضیحات کوتاه: </label>
                            <InputTextArea class="form-control" @bind-Value="@NewsModel.ShortDescription" placeholder="توضیحات کوتاه" />
                        </div>
                        <ValidationMessage style="color:darkred" For="() => NewsModel.ShortDescription" />

                    </div>
                    <div class="col md-12">
                        <div class="form-group">
                            <label>توضیحات: </label>
                            <InputTextArea class="form-control" @bind-Value="@NewsModel.Description" placeholder="توضیحات" />
                        </div>
                        <ValidationMessage style="color:darkred" For="() => NewsModel.Description" />

                    </div>
                    <div class="col md-12">
                        <div class="form-group">
                            <button class="btn btn-success" type="submit" @onclick="@HandleCreateNews">ثبت خبر</button>
                        </div>
                    </div>
                </EditForm>
            </div>
        </div>
    </div>
</div>

@code {
    private NewsDTO NewsModel { get; set; } = new NewsDTO();

    private async Task HandleCreateNews()
    {
        var duplicateNews = await NewsRepository.NewsExistsByTitle(NewsModel.Title);
        if (duplicateNews != null)
        {
            return;

        }
        NewsModel.ImageUrl = "Default.png";
        var createdResults = await NewsRepository.CreateNews(NewsModel);
        NavigationManager.NavigateTo("news");
    }
}
