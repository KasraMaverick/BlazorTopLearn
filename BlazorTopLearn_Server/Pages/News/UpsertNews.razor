@page "/news/add-news"
@page "/news/edit-news/{Id:int}"
@using Blazor.Model.NewsDtos
@using Blazor.Business.Repository.IRepository
@using Blazor.Data.Entities.NewsEntities
@inject IJSRuntime JsRuntime

@inject INewsRepository NewsRepository
@inject NavigationManager NavigationManager

<div class="container">
    <div class="row">
        <div class="col-md-12">
            <div class="post-content">
                <EditForm Model="@NewsModel" OnValidSubmit="@HandleUpsertNews">
                    <DataAnnotationsValidator />
                    <div class="col md-12">
                        <div class="form-group">
                            <label>عنوان</label>
                            <InputText class="form-control" @bind-Value="@NewsModel.Title" placeholder="عنوان خبر" />
                        </div>
                        <ValidationMessage style="color:darkred" For="() => NewsModel.Title"/>
                    </div>
                    <div class="col md-12">
                        <div class="form-group">
                            <label>توضیحات کوتاه: </label>
                            <InputTextArea class="form-control" @bind-Value="@NewsModel.ShortDescription" placeholder="توضیحات کوتاه" />
                        </div>
                        <ValidationMessage style="color:darkred" For="() => NewsModel.ShortDescription" />

                    </div>
                    <div class="col md-12">
                        <div class="form-group">
                            <label>توضیحات: </label>
                            <InputTextArea class="form-control" @bind-Value="@NewsModel.Description" placeholder="توضیحات" />
                        </div>
                        <ValidationMessage style="color:darkred" For="() => NewsModel.Description" />

                    </div>
                    <div class="col md-12">
                        <div class="form-group">
                            <button class="btn btn-success" type="submit">@Title خبر</button>
                        </div>
                    </div>
                </EditForm>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public int? Id { get; set; }

    public string Title { get; set; } = "افزودن";

    private NewsDTO NewsModel { get; set; } = new NewsDTO();

    protected override async Task OnInitializedAsync()
    {
        if (Id != null)
        {
            Title = "ویرایش";
            NewsModel = await NewsRepository.GetNewsById(Id.Value);
        }
        else
        {

        }
    }

    private async Task HandleUpsertNews()
    {
        try
        {
            var duplicateNews = await NewsRepository.NewsExistsByTitle(NewsModel.Title, NewsModel.NewsId);
            if (duplicateNews != null)
            {
                await JsRuntime.ToastrError("خبر مورد نظر تکراری می باشد");
                return;

            }

            if (NewsModel.NewsId != 0)
            {
                var editResult = await NewsRepository.UpdateNews(NewsModel.NewsId, NewsModel);
                await JsRuntime.ToastrSuccess("خبر مورد نظر با موفقیت ویرایش شد");
            }
            else
            {
                NewsModel.ImageUrl = "Default.png";
                var createdResult = await NewsRepository.CreateNews(NewsModel);
                await JsRuntime.ToastrSuccess("خبر مورد نظر با موفقیت ایجاد شد");
            }
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            throw;
        }

        NavigationManager.NavigateTo("news");
       
    }
}
